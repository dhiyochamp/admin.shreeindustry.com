// "use client";

// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import Navbar from "@/container/layout/Navbar";
// import Sidebar from "@/container/layout/Sidebar";
// import { Toaster } from "react-hot-toast";
// import StoreProvider from "@/providers/StoreProvider";
// import { useSelector } from "react-redux";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   const { isauth } = useSelector((state) => state.auth);
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <StoreProvider>
//           <div className="flex overflow-hidden h-screen">
//             {isauth && <Sidebar />}
//             <div className="w-full h-screen transition-all duration-300 ease-in-out relative">
//               {isauth && <Navbar />}
//               <div className="pt-4 h-[100vh] overflow-hidden bg-[#F9F9F9]">
//                 <Toaster position="top-right" reverseOrder={false} />

//                 {children}
//               </div>
//             </div>
//           </div>
//         </StoreProvider>
//       </body>
//     </html>
//   );
// }

// //  <div className="flex overflow-hidden  h-screen">
// //    <Sidebar />
// //    <div className="w-[calc(100%-224px)] h-screen transition-all duration-300 ease-in-out relative">
// //      <Navbar />
// //      <div className="pt-4 h-[100vh] overflow-hidden bg-[#F9F9F9]">
// //        {children}
// //      </div>
// //    </div>
// //  </div>;
// This part is for Server Component, no "use client" here.
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import StoreProvider from "@/providers/StoreProvider";
import ClientLayout from "./ClientLayout";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  // This logic will be handled client-side in the layout with "use client"
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <StoreProvider>
          {/* This will be rendered in a client-side component */}
          {/* {children} */}
          <ClientLayout children={children} />
        </StoreProvider>
      </body>
    </html>
  );
}
